import {getDb} from "../utils/db";
import CONSTANTS from "../utils/const";

const addEmployeeDetailsToDB = async (data) => {
  const result = await getDb()(CONSTANTS.EMPLOYEE_DETAILS_TABLE.NAME)
    .insert(data)
    .returning(CONSTANTS.EMPLOYEE_DETAILS_TABLE.ID);

  return result[CONSTANTS.COMMON.ZERO_INDEX];
};

const getAllEmployees = async () => {
  return getDb()(CONSTANTS.USER_TABLE.NAME)
    .rightJoin(CONSTANTS.EMPLOYEE_DETAILS_TABLE.NAME, `${CONSTANTS.USER_TABLE.NAME}.${CONSTANTS.USER_TABLE.ID}`,
      `${CONSTANTS.EMPLOYEE_DETAILS_TABLE.NAME}.${CONSTANTS.EMPLOYEE_DETAILS_TABLE.ID}`)
    .leftJoin(CONSTANTS.USER_ROLE_TABLE.NAME, `${CONSTANTS.USER_TABLE.NAME}.${CONSTANTS.USER_TABLE.ROLE}`,
      `${CONSTANTS.USER_ROLE_TABLE.NAME}.${CONSTANTS.USER_ROLE_TABLE.ID}`)
    .leftJoin(CONSTANTS.ADDRESS_TABLE.NAME, `${CONSTANTS.USER_TABLE.NAME}.${CONSTANTS.USER_TABLE.ADDRESS}`,
      `${CONSTANTS.ADDRESS_TABLE.NAME}.${CONSTANTS.ADDRESS_TABLE.ID}`)
    .select(`${CONSTANTS.USER_TABLE.NAME}.${CONSTANTS.USER_TABLE.ID}`,
      CONSTANTS.USER_TABLE.FIRST_NAME,
      CONSTANTS.USER_TABLE.LAST_NAME,
      `${CONSTANTS.USER_ROLE_TABLE.NAME}.${CONSTANTS.USER_TABLE.ROLE}`,
      CONSTANTS.USER_TABLE.EMAIL,
      CONSTANTS.USER_TABLE.CONTACT_NO,
      CONSTANTS.USER_TABLE.IS_PHONE_VERIFIED,
      CONSTANTS.USER_TABLE.GENDER,
      CONSTANTS.USER_TABLE.STATUS,
      CONSTANTS.ADDRESS_TABLE.POSTAL_CODE,
      CONSTANTS.ADDRESS_TABLE.STREET,
      CONSTANTS.ADDRESS_TABLE.CITY,
      CONSTANTS.ADDRESS_TABLE.COUNTRY,
      CONSTANTS.EMPLOYEE_DETAILS_TABLE.DATE_OF_JOIN,
      CONSTANTS.EMPLOYEE_DETAILS_TABLE.EMPLOYEE_ID,
      CONSTANTS.EMPLOYEE_DETAILS_TABLE.ADAMANT_CODE,
      CONSTANTS.EMPLOYEE_DETAILS_TABLE.DOL,
      CONSTANTS.EMPLOYEE_DETAILS_TABLE.DESIGNATION,
      CONSTANTS.EMPLOYEE_DETAILS_TABLE.SUPERVISOR,
      CONSTANTS.EMPLOYEE_DETAILS_TABLE.JOB_LOCATION,
      CONSTANTS.EMPLOYEE_DETAILS_TABLE.JOB_LOCATION_STATE,
      CONSTANTS.EMPLOYEE_DETAILS_TABLE.ON_ROLL,
      CONSTANTS.EMPLOYEE_DETAILS_TABLE.DOB,
      CONSTANTS.EMPLOYEE_DETAILS_TABLE.EMERGENCY_NO,
      CONSTANTS.EMPLOYEE_DETAILS_TABLE.SELF_AADHAR_NO,
      CONSTANTS.EMPLOYEE_DETAILS_TABLE.QUALIFICATION,
      CONSTANTS.EMPLOYEE_DETAILS_TABLE.FATHER_NAME,
      CONSTANTS.EMPLOYEE_DETAILS_TABLE.MOTHER_NAME,
      CONSTANTS.EMPLOYEE_DETAILS_TABLE.SPOUSE_NAME,
      CONSTANTS.EMPLOYEE_DETAILS_TABLE.ESIC_NO,
      CONSTANTS.EMPLOYEE_DETAILS_TABLE.UAN,
      CONSTANTS.EMPLOYEE_DETAILS_TABLE.PAN_NO,
      CONSTANTS.EMPLOYEE_DETAILS_TABLE.ACCOUNT_NO,
      CONSTANTS.EMPLOYEE_DETAILS_TABLE.IFSC_CODE,
      CONSTANTS.EMPLOYEE_DETAILS_TABLE.BANK_NAME,
      CONSTANTS.EMPLOYEE_DETAILS_TABLE.PERMANENT_ADDRESS,
      CONSTANTS.EMPLOYEE_DETAILS_TABLE.CORRESPONDENCE_ADDRESS,
      CONSTANTS.EMPLOYEE_DETAILS_TABLE.DAILY_RATE,
    )
}

const updateEmployeeDetailsInDB = async (id, data) => {
  const result = await getDb()(CONSTANTS.EMPLOYEE_DETAILS_TABLE.NAME)
    .update(data, CONSTANTS.EMPLOYEE_DETAILS_TABLE.ID)
    .where(CONSTANTS.USER_TABLE.ID, id);
  return result[CONSTANTS.COMMON.ZERO_INDEX];
};

export default {addEmployeeDetailsToDB, getAllEmployees, updateEmployeeDetailsInDB};

